"A date string with format `Y-m-d`, e.g. `2011-05-23`."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime
    @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    user(id: ID! @eq): User @find
    users: [User!]! @all
}

type LoadUser {
    remember_token: String
    logged_in: String
    email: String
    token: String
    access: Boolean
    name: String
}

type GetAllUsers {
    otherUsers: [String]
}

type User {
    email: String!
    password: String
    username: String!
    name: String!
}

type ErrorData {
    msg: String
}

type RegisterSchema {
    user: User
    logged_in: Boolean
    remember_token: String
    errData: ErrorData
    registered: Boolean
}

type LoginSchema {
    user: User
    remember_token: String
    registered: Boolean 
    errData: ErrorData
    logged_in: Boolean
}

type Messages {
    senderEmail: String
    recieverEmai: String
    txtMsg: String
}

type Message {
    senderEmail: String
    receiverEmail: String
    txtMsg: String
    time: String!
}

type P2PCHATDATA {
    id: String
    txtMsg: String
    senderEmail: String
    receiverEmail: String
    sent_at: String
}

type P2PCHAT{
   messages:[P2PCHATDATA]
}

type Mutation {
    registerUser(
        email: String! @rules(apply: ["min:4"])
        name: String
        password: String! @rules(apply: ["min:3"])
        username: String! @rules(apply: ["min:3"])
    ): RegisterSchema! @field(resolver: "AuthMutator@register")

    loginUser(email: String!, password: String!): LoginSchema!
        @field(resolver: "AuthMutator@login")

    loadUser(remember_token: String): LoadUser @field(resolver: "AuthMutator@load_user")

    getAllUsers(myEmail: String): GetAllUsers @field(resolver: "AuthMutator@getAllUsers")

    sendMessage(
        txtMsg: String
        senderEmail: String
        receiverEmail: String
    ): Message @field(resolver: "MessageMutator@sendMessage")

    loadP2pChat(
        senderEmail: String,
        receiverEmail: String
    ): P2PCHAT @field (resolver: "MessageMutator@loadP2pChat")
}
